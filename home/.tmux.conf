# Use zsh
set-option -g default-shell /usr/bin/zsh

# Act like GNU screen
unbind C-b
set -g prefix C-a

# Act like Vim
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Also resizing.
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# Look good
set-option -g default-terminal "screen-256color"

# Enable mouse support.
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on

# scrollback buffer size increase
set -g history-limit 500000

# C-a C-a will swap to last used window
bind-key C-a last-window

# C-a C-c will create new window.
bind-key C-c new-window

# Start tab numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Highlight active window
# set-window-option -g window-status-current-bg red

# use different keys to split vertical and horizonal
bind | split-window -h
bind - split-window -v

set -g mouse-select-pane on

# Allow mouse dragging to resize panes
set -g mouse-resize-pane on

# Source tmuxline for bubblegum.
source "/home/fede/.tmuxline.config"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

# Xterm keys.
set-option -gw xterm-keys on

# Allow Ctrl Tab to navigate windows.
bind-key -n C-Tab next-window
